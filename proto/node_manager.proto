syntax = "proto3";

package node_manager;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// 节点管理服务
service NodeManager {
  // 节点状态管理
  rpc GetNodeStatus (NodeRequest) returns (NodeStatus) {
    option (google.api.http) = {
      get: "/v1/nodes/{node_id}/status"
    };
  }
  
  rpc UpdateNodeConfig (NodeConfig) returns (OperationResult) {
    option (google.api.http) = {
      put: "/v1/nodes/{node_id}/config"
      body: "*"
    };
  }
  
  // 用户管理
  rpc AddUser (UserInfo) returns (OperationResult) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  }
  
  rpc RemoveUser (UserInfo) returns (OperationResult) {
    option (google.api.http) = {
      delete: "/v1/users/{user_id}"
    };
  }
  
  rpc UpdateUserQuota (QuotaInfo) returns (OperationResult) {
    option (google.api.http) = {
      patch: "/v1/users/{user_id}/quota"
      body: "*"
    };
  }
  
  // 流量统计
  rpc GetTrafficStats (TrafficRequest) returns (TrafficStats) {
    option (google.api.http) = {
      get: "/v1/traffic/{node_id}"
    };
  }
  
  // 系统监控
  rpc GetSystemMetrics (MetricsRequest) returns (SystemMetrics) {
    option (google.api.http) = {
      get: "/v1/metrics/{node_id}"
    };
  }
}

// 请求和响应消息定义
message NodeRequest {
  string node_id = 1;
}

message NodeStatus {
  string node_id = 1;                // 节点唯一标识
  string status = 2;                 // 运行状态：running|stopped|error
  float cpu_usage = 3;              // CPU 使用率 (0-100)
  float memory_usage = 4;           // 内存使用率 (0-100)
  float network_in = 5;             // 入站流量 (bytes)
  float network_out = 6;            // 出站流量 (bytes)
  int32 online_users = 7;           // 在线用户数
  string version = 8;               // 节点版本号
  google.protobuf.Timestamp last_heartbeat = 9;  // 最后心跳时间
}

message NodeConfig {
  string node_id = 1;
  string name = 2;
  string address = 3;
  int32 port = 4;
  string transport_type = 5;
  map<string, string> settings = 6;
  repeated string tags = 7;
  RateLimit rate_limit = 8;
  Security security = 9;
}

message RateLimit {
  bool enabled = 1;
  int64 upload = 2;
  int64 download = 3;
}

message Security {
  bool tls_enabled = 1;
  bool allow_insecure = 2;
  repeated string cipher_suites = 3;
}

message UserInfo {
  string user_id = 1;               // 用户唯一标识
  string email = 2;                 // 用户邮箱
  string uuid = 3;                  // 用户 UUID
  int64 quota = 4;                  // 流量配额 (bytes)
  int64 used_quota = 5;             // 已用流量 (bytes)
  int64 expire_time = 6;            // 过期时间戳
  repeated string allowed_protocols = 7;  // 允许的协议类型
  map<string, string> settings = 8;  // 用户自定义设置
}

message QuotaInfo {
  string user_id = 1;               // 用户唯一标识
  int64 quota = 2;                  // 新的流量配额
  bool reset_used = 3;              // 是否重置已用流量
  string quota_type = 4;            // 配额类型：monthly|total
}

message TrafficRequest {
  string node_id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
}

message TrafficStats {
  string node_id = 1;               // 节点唯一标识
  repeated UserTraffic users = 2;    // 用户流量统计
  google.protobuf.Timestamp start_time = 3;  // 统计开始时间
  google.protobuf.Timestamp end_time = 4;    // 统计结束时间
}

message UserTraffic {
  string user_id = 1;               // 用户唯一标识
  int64 upload = 2;                 // 上传流量 (bytes)
  int64 download = 3;               // 下载流量 (bytes)
  repeated ConnectionInfo connections = 4;  // 连接信息
}

message ConnectionInfo {
  string source_ip = 1;             // 源 IP
  int32 source_port = 2;            // 源端口
  string dest_ip = 3;               // 目标 IP
  int32 dest_port = 4;              // 目标端口
  string protocol = 5;              // 协议类型
  google.protobuf.Timestamp start_time = 6;  // 连接开始时间
  int64 bytes_transferred = 7;      // 传输字节数
}

message MetricsRequest {
  string node_id = 1;
}

message SystemMetrics {
  string node_id = 1;
  float cpu_usage = 2;
  float memory_usage = 3;
  float disk_usage = 4;
  int32 connection_count = 5;
  google.protobuf.Timestamp timestamp = 6;
}

message OperationResult {
  bool success = 1;
  string message = 2;
  string error_code = 3;
}